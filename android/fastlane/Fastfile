# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.27.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(
  #     task: 'assemble',
  #     build_type: 'Release'
  #   )
  #   supply(track: 'beta')
  #
  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end

  desc "Create and Submit Screenshots to Google Play"
  lane :screenshots do

    gradle(
      task: "assemble",
      build_type: "Debug",
    )

    gradle(
      task: "assemble",
      build_type: "AndroidTest",
    )

    screengrab
    # supply // don't supply as might want to pick just the best screenshots and delete others
  end

  desc "Submit a new Alpha Build to GooglePlay Alpha"
  lane :alpha do

    # Get the last version code and increment it.
    versionCode = File.read("metadata/versionCode").to_i
    versionCode = versionCode +1

    f = File.new("metadata/versionCode", "w")
    f.write(versionCode)
    f.close

    versionName = "1.0.#{versionCode}"

    gradle(
      task: "clean"
    )
    gradle(
      task: "assemble",
      build_type: "Release",
      properties: {
        'versionCode' => versionCode,
        'versionName' => versionName
      }
    )

    supply(track: 'alpha')

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer
